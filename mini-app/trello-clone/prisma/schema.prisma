// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode =  "prisma"
}

model Board {
  id  String @id @default(uuid()) @map("_id")

  orgId String

  title String

  imageId String
  imageThumbUrl String
  imageFullUrl String
  imageLinkHTML String
  imageUserName String

  list List[]

  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id String @id @default(uuid()) @map("_id")

  title String
  order Int

  boardId String
  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)

  cards Card[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id String @id @default(uuid()) @map("_id")

  title String
  order Int
  description String?

  listId String
  list List @relation(fields: [listId], references: [id], onDelete: Cascade)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@index([listId])
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id String @id @default(uuid()) @map("_id")

  orgId String
  action ACTION
  entityType ENTITY_TYPE
  entityId String
  entityTitle String

  userId String
  userName String
  userImage String?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}